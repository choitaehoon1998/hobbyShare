<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hobbyshare.dao.SoccerProductDao">

  <resultMap type="SoccerProduct" id="findWithFilesMap">
    <id column="soccer_product_id" property="soccerProductNo"/>
    <result column="member_id" property="memberNo"/>
    <result column="product_title" property="title"/>
    <result column="product_price" property="price"/>
    <result column="product_content" property="content"/>
    <result column="status" property="status"/>
    <result column="created_date" property="createdDate"/>
    
    <collection property="member" ofType="Member">
      <id column="member_id" property="memberNo"/>
      <result column="nickname" property="nickname"/>
    </collection>

    <collection property="files" ofType="PhotoFile">
      <id column="soccer_product_photo_id" property="photoFileNo"/>
      <result column="file_path" property="filePath"/>
      <result column="soccer_product_id" property="soccerProductNo"/>
    </collection>
    
  </resultMap>

  <insert id="insert" parameterType="SoccerProduct"
   useGeneratedKeys="true" keyColumn="soccer_product_id" keyProperty="soccerProductNo">
    insert into soccer_product
    (member_id, product_title, product_price, product_content, created_date)
    values
    (#{memberNo}, #{title}, #{price}, #{content},now())
  </insert>
  
  <select id="findAll" parameterType="map" resultMap="findWithFilesMap">
    SELECT * FROM (
		  SELECT
		     soccer_product_photo_id
		    , sp.soccer_product_id
		    , product_title
		    , product_price
		    , m.nickname
		    , sp.created_date
		    , spp.file_path
		    , status
		    , ROW_NUMBER() OVER(PARTITION BY spp.soccer_product_id ORDER BY spp.soccer_product_photo_id) AS rnum
		  FROM soccer_product sp
		  INNER JOIN member m ON m.member_id = sp.member_id
		  INNER JOIN soccer_product_photo spp ON spp.soccer_product_id = sp.soccer_product_id
		) a
		WHERE rnum = 1
		order by soccer_product_photo_id desc
    <!-- 
    select 
      sp.soccer_product_id, 
      sp.product_title, 
      sp.product_price, 
      sp.product_content, 
      sp.status, 
      sp.created_date, 
      spp.file_path,
      m.nickname
    from soccer_product sp
      left outer join soccer_product_photo spp on sp.soccer_product_id=spp.soccer_product_id
      LEFT OUTER JOIN member m ON sp.member_id = m.member_id
    order by sp.soccer_product_id desc
     -->
  </select>
  
  <select id="findWithFilesBy" parameterType="int" resultMap="findWithFilesMap">
    select 
      sp.soccer_product_id, 
      sp.product_title, 
      sp.product_price, 
      sp.product_content, 
      sp.status, 
      sp.created_date, 
      spp.soccer_product_photo_id,
      spp.file_path,
      m.nickname,
      m.member_id
    from soccer_product sp
      left outer join soccer_product_photo spp on sp.soccer_product_id=spp.soccer_product_id
      LEFT OUTER JOIN member m ON sp.member_id = m.member_id
      WHERE sp.soccer_product_id = ${no}
    order by sp.soccer_product_id
  </select>
  
  <delete id="delete" parameterType="int">
    delete 
    FROM soccer_product_photo 
    WHERE soccer_product_id = #{no}
  </delete>
  
  <delete id="delete2" parameterType="int">
    delete 
    FROM soccer_product 
    WHERE soccer_product_id = #{no}
  </delete>
  
  <update id="update" parameterType="map">
    UPDATE soccer_product
			 SET product_title = #{title},
			    product_price= #{price},
			    product_content = #{content}
			WHERE soccer_product_id = #{soccerProductNo}
  </update>
  
  <delete id="deletephoto" parameterType="int">
    delete 
    FROM soccer_product_photo
    WHERE soccer_product_photo_id = #{no}
  </delete>

</mapper>